
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

data_train=pd.read_csv("mobiledata.csv")
data_test=pd.read_csv("mobiledata.csv")

data_train.head()

data_test.head()

sns.countplot(data_train['price_range'])

data_train.shape,data_test.shape

data_train.isnull().sum()

data_train.info()

data_train.describe()

import seaborn as sns
plt.figure(figsize=(20,20))
sns.heatmap(data_train.corr(),annot=True,cmap=plt.cm.Accent_r)
plt.show()

data_train.plot(kind='box',figsize=(20,10))

x=data_train.drop('price_range',axis=1)
y=data_train['price_range']
from sklearn.model_selection import train_test_split
X_train,X_test,Y_train,Y_test=train_test_split(x,y,test_size=0.1,random_state=101)

from sklearn.preprocessing import StandardScaler
sc=StandardScaler()
X_train=sc.fit_transform(X_train)
X_test=sc.transform(X_test)
test=sc.transform(X_test)

X_train

from sklearn.tree import DecisionTreeClassifier
dtc=DecisionTreeClassifier()
dtc.fit(X_train,Y_train)

pred=dtc.predict(X_test)
pred

from sklearn.metrics import accuracy_score, confusion_matrix
dtc_acc=accuracy_score(pred,Y_test)
print(dtc_acc)
print(confusion_matrix(pred,Y_test))

from sklearn.svm import SVC
knn=SVC()
knn.fit(X_train,Y_train)

pred1=knn.predict(X_test)
pred1

from sklearn.metrics import accuracy_score, confusion_matrix
svc_acc=accuracy_score(pred1,Y_test)
print(svc_acc)
print(confusion_matrix(pred1,Y_test))

from sklearn.linear_model import LogisticRegression
lr=LogisticRegression()
lr.fit(X_train,Y_train)

pred2=lr.predict(X_test)
pred2

from sklearn.metrics import accuracy_score, confusion_matrix
lr_acc=accuracy_score(pred2,Y_test)
print(lr_acc)
print(confusion_matrix(pred2,Y_test))

plt.bar(x=['dtc','svc','lr'],height=[dtc_acc,svc_acc,lr_acc])
plt.xlabel("Algorithms")
plt.ylabel("Accuracy Score")
plt.show()
